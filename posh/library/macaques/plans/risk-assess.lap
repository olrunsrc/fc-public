# risk-assess.lap  -- this is a more cognitive model of monkey dynamics, where we hope to replicate more of their behavior
# started April 2008 by JJB, based on grooming.lap by PR (originally by HL)

(
 (C a-groom (goal ((s_succeed 0)))
    (elements   
      ((has-no-target      (trigger((s_has_groom_target 0)))            a_pick_groom_target))
      ((not-near-target    (trigger((s_is_near_groom_target 0)))        a_move_to_groom_target)) 
      ((default-groom      (trigger((s_succeed)))                       a_groom_with_target))
     )
    ) 

  (C a-eat (goal ((s_succeed 0)))
    (elements
      ((has-no-food      		(trigger((s_has_food 0)))            	a_pick_food))
      ((not-near-target  		(trigger((s_is_near_food_target 0))) 	a_move_to_food))
      ((default-feeding  		(trigger((s_succeed)))    				a_eat))
     )
    )

  (C a-drink (goal ((s_succeed 0)))
    (elements
      ((has-no-drink      		(trigger((s_has_drink 0)))            		a_pick_drink))
      ((not-near-target  		(trigger((s_is_near_drink_target 0))) 		a_move_to_drink))
      ((default-feeding  		(trigger((s_is_near_drink_target)))  		a_drink))
     )
    )
  
 (SDC life (goal (s_one_step (s_succeed 0)))
     (drives
       # ((deadly-danger	   (trigger((s_scary 0)))				a_avoid))  # nothing here for awhile
       # ((outranked		   (trigger ((s_dom_near_goal)))    a_reconsider-target)) # this will be modelled sooner
       ((groom     (trigger((s_wants_to_groom))) 		a-groom) 
        (eat       (trigger((s_wants_food)))			a-eat)
        (assert    )      
       ((groom     (trigger((s_wants_to_groom))) 		a-groom)) 
       ((explore   (trigger((s_succeed))) 				a_move_around))                          	          
      )
     )
 )

